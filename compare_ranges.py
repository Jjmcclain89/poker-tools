card_list = ['A', 'K', 'Q', 'J', 'T', '9', '8', '7', '6', '5', '4', '3', '2']
ip_range_str = "2d2c: 0.076,2h2c: 0.076,2h2d: 0.076,2s2c: 0.076,2s2d: 0.076,2s2h: 0.076,3d3c: 0.71,3h3c: 0.71,3h3d: 0.71,3s3c: 0.71,3s3d: 0.71,3s3h: 0.71,4d4c: 1,4h4c: 1,4h4d: 1,4s4c: 1,4s4d: 1,4s4h: 1,5d5c: 1,5h5c: 1,5h5d: 1,5s5c: 1,5s5d: 1,5s5h: 1,6d6c: 1,6h6c: 1,6h6d: 1,6s6c: 1,6s6d: 1,6s6h: 1,7c6c: 0.168,7d6d: 0.168,7d7c: 1,7h6h: 0.168,7h7c: 1,7h7d: 1,7s6s: 0.168,7s7c: 1,7s7d: 1,7s7h: 1,8c7c: 0.82,8d7d: 0.82,8d8c: 1,8h7h: 0.82,8h8c: 1,8h8d: 1,9c7c: 0.218,9c8c: 1,9d7d: 0.218,9d8d: 1,9d9c: 1,9h7h: 0.218,9h8h: 1,9h9c: 1,9h9d: 1,9s7s: 0.218,9s9c: 1,9s9d: 1,9s9h: 1,Tc8c: 1,Tc9c: 1,Td8d: 1,Td9d: 1,TdTc: 1,Th8h: 1,Th9h: 1,ThTc: 1,ThTd: 1,Jc8c: 0.616,Jc9c: 1,JcTc: 1,JcTd: 0.38,JcTh: 0.38,Jd8d: 0.616,Jd9d: 1,JdTc: 0.38,JdTd: 1,JdTh: 0.38,JdJc: 1,Jh8h: 0.616,Jh9h: 1,JhTc: 0.38,JhTd: 0.38,JhTh: 1,JhJc: 1,JhJd: 1,Qc8c: 0.376,Qc9c: 1,QcTc: 1,QcTd: 0.19,QcTh: 0.19,QcJc: 1,QcJd: 0.908,QcJh: 0.908,Qd8d: 0.376,Qd9d: 1,QdTc: 0.19,QdTd: 1,QdTh: 0.19,QdJc: 0.908,QdJd: 1,QdJh: 0.908,QdQc: 1,Qh8h: 0.376,Qh9h: 1,QhTc: 0.19,QhTd: 0.19,QhTh: 1,QhJc: 0.908,QhJd: 0.908,QhJh: 1,QhQc: 1,QhQd: 1,Qs9s: 1,QsTc: 0.19,QsTd: 0.19,QsTh: 0.19,QsJc: 0.908,QsJd: 0.908,QsJh: 0.908,QsQc: 1,QsQd: 1,QsQh: 1,Kc6c: 0.924,Kc7c: 0.974,Kc8c: 1,Kc9c: 1,KcTc: 1,KcTd: 0.826,KcTh: 0.826,KcJc: 1,KcJd: 1,KcJh: 1,KcQc: 1,KcQd: 1,KcQh: 1,KcQs: 1,Kd6d: 0.924,Kd7d: 0.974,Kd8d: 1,Kd9d: 1,KdTc: 0.826,KdTd: 1,KdTh: 0.826,KdJc: 1,KdJd: 1,KdJh: 1,KdQc: 1,KdQd: 1,KdQh: 1,KdQs: 1,KdKc: 1,Kh6h: 0.924,Kh7h: 0.974,Kh8h: 1,Kh9h: 1,KhTc: 0.826,KhTd: 0.826,KhTh: 1,KhJc: 1,KhJd: 1,KhJh: 1,KhQc: 1,KhQd: 1,KhQh: 1,KhQs: 1,KhKc: 1,KhKd: 1,Ks6s: 0.924,Ks7s: 0.974,Ks9s: 1,KsTc: 0.826,KsTd: 0.826,KsTh: 0.826,KsJc: 1,KsJd: 1,KsJh: 1,KsQc: 1,KsQd: 1,KsQh: 1,KsQs: 1,KsKc: 1,KsKd: 1,KsKh: 1,Ac2c: 1,Ac3c: 1,Ac4c: 1,Ac5c: 1,Ac6c: 1,Ac7c: 1,Ac8c: 1,Ac9c: 1,Ac9d: 0.226,Ac9h: 0.226,Ac9s: 0.226,AcTc: 1,AcTd: 1,AcTh: 1,AcJc: 1,AcJd: 1,AcJh: 1,AcQc: 1,AcQd: 1,AcQh: 1,AcQs: 1,AcKc: 1,AcKd: 1,AcKh: 1,AcKs: 1,Ad2d: 1,Ad3d: 1,Ad4d: 1,Ad5d: 1,Ad6d: 1,Ad7d: 1,Ad8d: 1,Ad9c: 0.226,Ad9d: 1,Ad9h: 0.226,Ad9s: 0.226,AdTc: 1,AdTd: 1,AdTh: 1,AdJc: 1,AdJd: 1,AdJh: 1,AdQc: 1,AdQd: 1,AdQh: 1,AdQs: 1,AdKc: 1,AdKd: 1,AdKh: 1,AdKs: 1,AdAc: 1,Ah2h: 1,Ah3h: 1,Ah4h: 1,Ah5h: 1,Ah6h: 1,Ah7h: 1,Ah8h: 1,Ah9c: 0.226,Ah9d: 0.226,Ah9h: 1,Ah9s: 0.226,AhTc: 1,AhTd: 1,AhTh: 1,AhJc: 1,AhJd: 1,AhJh: 1,AhQc: 1,AhQd: 1,AhQh: 1,AhQs: 1,AhKc: 1,AhKd: 1,AhKh: 1,AhKs: 1,AhAc: 1,AhAd: 1,As2s: 1,As3s: 1,As4s: 1,As5s: 1,As6s: 1,As7s: 1,As9c: 0.226,As9d: 0.226,As9h: 0.226,As9s: 1,AsTc: 1,AsTd: 1,AsTh: 1,AsJc: 1,AsJd: 1,AsJh: 1,AsQc: 1,AsQd: 1,AsQh: 1,AsQs: 1,AsKc: 1,AsKd: 1,AsKh: 1,AsKs: 1,AsAc: 1,AsAd: 1,AsAh: 1"
op_range_str = "2d2c: 1,2h2c: 1,2h2d: 1,2s2c: 1,2s2d: 1,2s2h: 1,3c2c: 1,3d2d: 1,3d3c: 1,3h2h: 1,3h3c: 1,3h3d: 1,3s2s: 1,3s3c: 1,3s3d: 1,3s3h: 1,4c2c: 1,4c3c: 1,4d2d: 1,4d3d: 1,4d4c: 1,4h2h: 1,4h3h: 1,4h4c: 1,4h4d: 1,4s2s: 1,4s3s: 1,4s4c: 1,4s4d: 1,4s4h: 1,5c2c: 1,5c3c: 1,5c4c: 1,5c4d: 0.91,5c4h: 0.91,5c4s: 0.91,5d2d: 1,5d3d: 1,5d4c: 0.91,5d4d: 1,5d4h: 0.91,5d4s: 0.91,5d5c: 1,5h2h: 1,5h3h: 1,5h4c: 0.91,5h4d: 0.91,5h4h: 1,5h4s: 0.91,5h5c: 1,5h5d: 1,5s2s: 1,5s3s: 1,5s4c: 0.91,5s4d: 0.91,5s4h: 0.91,5s4s: 1,5s5c: 1,5s5d: 1,5s5h: 1,6c2c: 1,6c3c: 1,6c4c: 1,6c5c: 1,6c5d: 1,6c5h: 1,6c5s: 1,6d2d: 1,6d3d: 1,6d4d: 1,6d5c: 1,6d5d: 1,6d5h: 1,6d5s: 1,6d6c: 1,6h2h: 1,6h3h: 1,6h4h: 1,6h5c: 1,6h5d: 1,6h5h: 1,6h5s: 1,6h6c: 1,6h6d: 1,6s2s: 1,6s3s: 1,6s4s: 1,6s5c: 1,6s5d: 1,6s5h: 1,6s5s: 1,6s6c: 1,6s6d: 1,6s6h: 1,7c3c: 1,7c4c: 1,7c5c: 1,7c5d: 0.08,7c5h: 0.08,7c5s: 0.08,7c6c: 1,7c6d: 1,7c6h: 1,7c6s: 1,7d3d: 1,7d4d: 1,7d5c: 0.08,7d5d: 1,7d5h: 0.08,7d5s: 0.08,7d6c: 1,7d6d: 1,7d6h: 1,7d6s: 1,7d7c: 1,7h3h: 1,7h4h: 1,7h5c: 0.08,7h5d: 0.08,7h5h: 1,7h5s: 0.08,7h6c: 1,7h6d: 1,7h6h: 1,7h6s: 1,7h7c: 1,7h7d: 1,7s3s: 1,7s4s: 1,7s5c: 0.08,7s5d: 0.08,7s5h: 0.08,7s5s: 1,7s6c: 1,7s6d: 1,7s6h: 1,7s6s: 1,7s7c: 1,7s7d: 1,7s7h: 1,8c2c: 1,8c3c: 1,8c4c: 1,8c5c: 1,8c6c: 1,8c6d: 0.192,8c6h: 0.192,8c6s: 0.192,8c7c: 1,8c7d: 1,8c7h: 1,8c7s: 1,8d2d: 1,8d3d: 1,8d4d: 1,8d5d: 1,8d6c: 0.192,8d6d: 1,8d6h: 0.192,8d6s: 0.192,8d7c: 1,8d7d: 1,8d7h: 1,8d7s: 1,8d8c: 0.844,8h2h: 1,8h3h: 1,8h4h: 1,8h5h: 1,8h6c: 0.192,8h6d: 0.192,8h6h: 1,8h6s: 0.192,8h7c: 1,8h7d: 1,8h7h: 1,8h7s: 1,8h8c: 0.844,8h8d: 0.844,9c2c: 1,9c3c: 1,9c4c: 1,9c5c: 1,9c6c: 1,9c7c: 1,9c7d: 0.9,9c7h: 0.9,9c7s: 0.9,9c8c: 0.854,9c8d: 1,9c8h: 1,9d2d: 1,9d3d: 1,9d4d: 1,9d5d: 1,9d6d: 1,9d7c: 0.9,9d7d: 1,9d7h: 0.9,9d7s: 0.9,9d8c: 1,9d8d: 0.854,9d8h: 1,9d9c: 0.516,9h2h: 1,9h3h: 1,9h4h: 1,9h5h: 1,9h6h: 1,9h7c: 0.9,9h7d: 0.9,9h7h: 1,9h7s: 0.9,9h8c: 1,9h8d: 1,9h8h: 0.854,9h9c: 0.516,9h9d: 0.516,9s2s: 1,9s3s: 1,9s4s: 1,9s5s: 1,9s6s: 1,9s7c: 0.9,9s7d: 0.9,9s7h: 0.9,9s7s: 1,9s8c: 1,9s8d: 1,9s8h: 1,9s9c: 0.516,9s9d: 0.516,9s9h: 0.516,Tc2c: 1,Tc3c: 1,Tc4c: 1,Tc5c: 1,Tc6c: 1,Tc7c: 1,Tc8c: 0.87,Tc8d: 1,Tc8h: 1,Tc9c: 0.636,Tc9d: 1,Tc9h: 1,Tc9s: 1,Td2d: 1,Td3d: 1,Td4d: 1,Td5d: 1,Td6d: 1,Td7d: 1,Td8c: 1,Td8d: 0.87,Td8h: 1,Td9c: 1,Td9d: 0.636,Td9h: 1,Td9s: 1,Th2h: 1,Th3h: 1,Th4h: 1,Th5h: 1,Th6h: 1,Th7h: 1,Th8c: 1,Th8d: 1,Th8h: 0.87,Th9c: 1,Th9d: 1,Th9h: 0.636,Th9s: 1,Jc2c: 1,Jc3c: 1,Jc4c: 1,Jc5c: 1,Jc6c: 1,Jc7c: 1,Jc8c: 0.82,Jc8d: 0.59,Jc8h: 0.59,Jc9c: 0.73,Jc9d: 1,Jc9h: 1,Jc9s: 1,JcTc: 1,JcTd: 0.796,JcTh: 0.796,Jd2d: 1,Jd3d: 1,Jd4d: 1,Jd5d: 1,Jd6d: 1,Jd7d: 1,Jd8c: 0.59,Jd8d: 0.82,Jd8h: 0.59,Jd9c: 1,Jd9d: 0.73,Jd9h: 1,Jd9s: 1,JdTc: 0.796,JdTd: 1,JdTh: 0.796,Jh2h: 1,Jh3h: 1,Jh4h: 1,Jh5h: 1,Jh6h: 1,Jh7h: 1,Jh8c: 0.59,Jh8d: 0.59,Jh8h: 0.82,Jh9c: 1,Jh9d: 1,Jh9h: 0.73,Jh9s: 1,JhTc: 0.796,JhTd: 0.796,JhTh: 1,Qc2c: 1,Qc3c: 1,Qc4c: 1,Qc5c: 1,Qc6c: 1,Qc7c: 1,Qc8c: 1,Qc8d: 0.826,Qc8h: 0.826,Qc9c: 0.79,Qc9d: 1,Qc9h: 1,Qc9s: 1,QcTc: 1,QcTd: 0.788,QcTh: 0.788,QcJc: 1,QcJd: 0.93,QcJh: 0.93,Qd2d: 1,Qd3d: 1,Qd4d: 1,Qd5d: 1,Qd6d: 1,Qd7d: 1,Qd8c: 0.826,Qd8d: 1,Qd8h: 0.826,Qd9c: 1,Qd9d: 0.79,Qd9h: 1,Qd9s: 1,QdTc: 0.788,QdTd: 1,QdTh: 0.788,QdJc: 0.93,QdJd: 1,QdJh: 0.93,Qh2h: 1,Qh3h: 1,Qh4h: 1,Qh5h: 1,Qh6h: 1,Qh7h: 1,Qh8c: 0.826,Qh8d: 0.826,Qh8h: 1,Qh9c: 1,Qh9d: 1,Qh9h: 0.79,Qh9s: 1,QhTc: 0.788,QhTd: 0.788,QhTh: 1,QhJc: 0.93,QhJd: 0.93,QhJh: 1,Qs2s: 1,Qs3s: 1,Qs4s: 1,Qs5s: 1,Qs6s: 1,Qs7s: 1,Qs8c: 0.826,Qs8d: 0.826,Qs8h: 0.826,Qs9c: 1,Qs9d: 1,Qs9h: 1,Qs9s: 0.79,QsTc: 0.788,QsTd: 0.788,QsTh: 0.788,QsJc: 0.93,QsJd: 0.93,QsJh: 0.93,Kc2c: 1,Kc3c: 1,Kc4c: 1,Kc5c: 1,Kc5d: 0.286,Kc5h: 0.286,Kc5s: 0.286,Kc6c: 0.746,Kc6d: 0.982,Kc6h: 0.982,Kc6s: 0.982,Kc7c: 0.956,Kc7d: 1,Kc7h: 1,Kc7s: 1,Kc8c: 1,Kc8d: 1,Kc8h: 1,Kc9c: 1,Kc9d: 0.796,Kc9h: 0.796,Kc9s: 0.796,KcTc: 1,KcTd: 0.53,KcTh: 0.53,KcJc: 1,KcJd: 0.884,KcJh: 0.884,KcQc: 1,KcQd: 0.864,KcQh: 0.864,KcQs: 0.864,Kd2d: 1,Kd3d: 1,Kd4d: 1,Kd5c: 0.286,Kd5d: 1,Kd5h: 0.286,Kd5s: 0.286,Kd6c: 0.982,Kd6d: 0.746,Kd6h: 0.982,Kd6s: 0.982,Kd7c: 1,Kd7d: 0.956,Kd7h: 1,Kd7s: 1,Kd8c: 1,Kd8d: 1,Kd8h: 1,Kd9c: 0.796,Kd9d: 1,Kd9h: 0.796,Kd9s: 0.796,KdTc: 0.53,KdTd: 1,KdTh: 0.53,KdJc: 0.884,KdJd: 1,KdJh: 0.884,KdQc: 0.864,KdQd: 1,KdQh: 0.864,KdQs: 0.864,Kh2h: 1,Kh3h: 1,Kh4h: 1,Kh5c: 0.286,Kh5d: 0.286,Kh5h: 1,Kh5s: 0.286,Kh6c: 0.982,Kh6d: 0.982,Kh6h: 0.746,Kh6s: 0.982,Kh7c: 1,Kh7d: 1,Kh7h: 0.956,Kh7s: 1,Kh8c: 1,Kh8d: 1,Kh8h: 1,Kh9c: 0.796,Kh9d: 0.796,Kh9h: 1,Kh9s: 0.796,KhTc: 0.53,KhTd: 0.53,KhTh: 1,KhJc: 0.884,KhJd: 0.884,KhJh: 1,KhQc: 0.864,KhQd: 0.864,KhQh: 1,KhQs: 0.864,Ks2s: 1,Ks3s: 1,Ks4s: 1,Ks5c: 0.286,Ks5d: 0.286,Ks5h: 0.286,Ks5s: 1,Ks6c: 0.982,Ks6d: 0.982,Ks6h: 0.982,Ks6s: 0.746,Ks7c: 1,Ks7d: 1,Ks7h: 1,Ks7s: 0.956,Ks8c: 1,Ks8d: 1,Ks8h: 1,Ks9c: 0.796,Ks9d: 0.796,Ks9h: 0.796,Ks9s: 1,KsTc: 0.53,KsTd: 0.53,KsTh: 0.53,KsJc: 0.884,KsJd: 0.884,KsJh: 0.884,KsQc: 0.864,KsQd: 0.864,KsQh: 0.864,KsQs: 1,Ac2c: 1,Ac2d: 0.728,Ac2h: 0.728,Ac2s: 0.728,Ac3c: 1,Ac3d: 1,Ac3h: 1,Ac3s: 1,Ac4c: 1,Ac4d: 1,Ac4h: 1,Ac4s: 1,Ac5c: 1,Ac5d: 0.708,Ac5h: 0.708,Ac5s: 0.708,Ac6c: 1,Ac6d: 1,Ac6h: 1,Ac6s: 1,Ac7c: 1,Ac7d: 0.966,Ac7h: 0.966,Ac7s: 0.966,Ac8c: 1,Ac8d: 1,Ac8h: 1,Ac9c: 1,Ac9d: 0.622,Ac9h: 0.622,Ac9s: 0.622,AcTc: 1,AcTd: 0.75,AcTh: 0.75,AcJc: 1,AcJd: 0.732,AcJh: 0.732,AcQc: 1,AcQd: 0.44,AcQh: 0.44,AcQs: 0.44,Ad2c: 0.728,Ad2d: 1,Ad2h: 0.728,Ad2s: 0.728,Ad3c: 1,Ad3d: 1,Ad3h: 1,Ad3s: 1,Ad4c: 1,Ad4d: 1,Ad4h: 1,Ad4s: 1,Ad5c: 0.708,Ad5d: 1,Ad5h: 0.708,Ad5s: 0.708,Ad6c: 1,Ad6d: 1,Ad6h: 1,Ad6s: 1,Ad7c: 0.966,Ad7d: 1,Ad7h: 0.966,Ad7s: 0.966,Ad8c: 1,Ad8d: 1,Ad8h: 1,Ad9c: 0.622,Ad9d: 1,Ad9h: 0.622,Ad9s: 0.622,AdTc: 0.75,AdTd: 1,AdTh: 0.75,AdJc: 0.732,AdJd: 1,AdJh: 0.732,AdQc: 0.44,AdQd: 1,AdQh: 0.44,AdQs: 0.44,Ah2c: 0.728,Ah2d: 0.728,Ah2h: 1,Ah2s: 0.728,Ah3c: 1,Ah3d: 1,Ah3h: 1,Ah3s: 1,Ah4c: 1,Ah4d: 1,Ah4h: 1,Ah4s: 1,Ah5c: 0.708,Ah5d: 0.708,Ah5h: 1,Ah5s: 0.708,Ah6c: 1,Ah6d: 1,Ah6h: 1,Ah6s: 1,Ah7c: 0.966,Ah7d: 0.966,Ah7h: 1,Ah7s: 0.966,Ah8c: 1,Ah8d: 1,Ah8h: 1,Ah9c: 0.622,Ah9d: 0.622,Ah9h: 1,Ah9s: 0.622,AhTc: 0.75,AhTd: 0.75,AhTh: 1,AhJc: 0.732,AhJd: 0.732,AhJh: 1,AhQc: 0.44,AhQd: 0.44,AhQh: 1,AhQs: 0.44,As2c: 0.728,As2d: 0.728,As2h: 0.728,As2s: 1,As3c: 1,As3d: 1,As3h: 1,As3s: 1,As4c: 1,As4d: 1,As4h: 1,As4s: 1,As5c: 0.708,As5d: 0.708,As5h: 0.708,As5s: 1,As6c: 1,As6d: 1,As6h: 1,As6s: 1,As7c: 0.966,As7d: 0.966,As7h: 0.966,As7s: 1,As8c: 1,As8d: 1,As8h: 1,As9c: 0.622,As9d: 0.622,As9h: 0.622,As9s: 1,AsTc: 0.75,AsTd: 0.75,AsTh: 0.75,AsJc: 0.732,AsJd: 0.732,AsJh: 0.732,AsQc: 0.44,AsQd: 0.44,AsQh: 0.44,AsQs: 1"

# Parse a range string in the format that GTO wizard outputs and return a python dict representation
def build_range_dict_from_gtow_string(range_str):
    range_pairs = range_str.split(",")
    range_dict = {}
    for p in range_pairs:
        cards = p.split(':')[0]
        range_dict[cards] = float(p.split(':')[1])
    return range_dict

# Parse a range dictionary and for each card determine what percentage of combos in the range contain that card
def get_individual_card_frequencies(range_dict):
    card_frequencies = {card: 0 for card in card_list}
    total_combos = 0
    for item in range_dict.items():
        card_1 = item[0][0]
        card_2 = item[0][2]
        frequency = item[1]
        total_combos += frequency
        if card_1 != card_2:
            card_frequencies[card_1] = card_frequencies[card_1] + frequency
            card_frequencies[card_2] = card_frequencies[card_2] + frequency
        else:
            card_frequencies[card_1] = card_frequencies[card_1] + frequency
    for item in card_frequencies.items():
        card_frequencies[item[0]] = (item[1]/total_combos)*100
    return card_frequencies

def get_frequency_differentials(ip_frequencies, op_frequencies):
    frequency_differentials = {}
    for card in card_list:
        frequency_differentials[card] = ip_frequencies[card] - op_frequencies[card]
    return frequency_differentials

ip_range_dict = build_range_dict_from_gtow_string(ip_range_str)
op_range_dict = build_range_dict_from_gtow_string(op_range_str)

ip_individual_card_frequencies = get_individual_card_frequencies(ip_range_dict)
op_individual_card_frequencies = get_individual_card_frequencies(op_range_dict)
diff = get_frequency_differentials(ip_individual_card_frequencies, op_individual_card_frequencies)
print(diff)
